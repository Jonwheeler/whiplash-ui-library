[
  {
    "name": "breadcrumb",
    "description": "A breadcrumb nav list for apps with and without React-Router",
    "component": "<Breadcrumb list={ anArrayOfObjects }  />",
    "instructions": "To use the Breadcrumb component, just drop it in and include a 'list' prop that takes in an array of objects containing 'name' and 'url' properties.",
    "notes": "Include the 'router' prop if you want a React-router specific Link tag included."
  },
  {
    "name": "button",
    "description": "No need for description...",
    "component": "<Button buttonText=\"default filled\" callback={ this._clickButton } />",
    "instructions": "To use the Button component, just drop it in and include a 'buttonText', 'theme', and optional 'callback' property that controls the styling down to user actions.",
    "notes": "theme types: default, primary, secondary, danger, filled, text"
  },
  {
    "name": "input",
    "description": "The Input Component is used to display a custom style and animated input tag in your forms.",
    "component": "<Input inputLabel=\"email\" inputType=\"email\" onUserInput={ this._textInput } />",
    "instructions": "To use the Input component, add it into your form and include a 'inputType' and 'inputLabel' prop that assigns the correct type of input (i.e. 'text', 'email', etc.).",
    "notes": "This component has a built-in callback prop that will send back the value of the input as the user types."
  },
  {
    "name": "modal",
    "description": "The Modal Component is used to have dynamic modals within your app triggered from it's active property.",
    "component": "<Modal active={ this.state.modalActive } content={ this.state.modalContent } onCloseModal={ this._toggleModal } />",
    "instructions": "To use the Modal component, add it into the parent component in your project binding it's active prop to the state prop of your choioce (boolean).",
    "notes": "This component requires Animate.css so be sure to include the package within your project."
  },
  {
    "name": "navicon",
    "description": "The Navicon is used as a button on mobile devices to toggle the main nav menu",
    "component": "<Navicon onUserInput={ this._toggleNavicon } />",
    "instructions": "To use the Navicon component, just drop it in and include a <code>onUserInput</code> property that binds to a callback function to do something.",
    "notes": "The Navicon component is absolutely positioned so be sure to put it in a relative positioned container"
  }
]
